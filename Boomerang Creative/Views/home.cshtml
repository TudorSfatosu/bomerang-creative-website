@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Home>

@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web.Models;
@using System.IO;

@{
	Layout = "Master.cshtml";
}

@section Scripts {

	<script>
		var isEdge = window.navigator.userAgent.indexOf("Edge") > -1;
		$(document).ready(function () {
			if (isEdge) {
					$("a.scroll-link").css("opacity", "0");	
			}

			$("a.scroll-link").on('click', function (event) {
				if (this.hash !== "") {
					event.preventDefault();
					var hash = this.hash;
					$('html, body').animate({
						scrollTop: $(hash).offset().top
					}, 800, function () {
						window.location.hash = hash;
					});
					$(".scroll-arrow").fadeTo(1000,0);
				}
			});
		});

		$(document).on('scroll', function() {
			if($(this).scrollTop()>=$('#gallery').position().top){
				$(".scroll-arrow").fadeTo(1000,0);
			}
		})

	</script>

}

@if (@Model.MobileMask != null)
{
	<style>
		.home-banner {
			background-image: url(@Model.MobileMask.Url);

		}

		@@media (min-width: 768px) {
			.home-banner {
				background-image: linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 87%, rgba(0, 0, 0, 0.4) 100%), url(@Model.VideoBannerMask.Url);
			}
		}
	</style>
}

<a href="#gallery" class="scroll-link d-none d-md-block">
	<div class="scroll-arrow animated">

		<div class="circle circle-top"></div>
		<div class="circle circle-main"></div>
		<div class="circle circle-bottom"></div>

		<svg class="svg" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 612 612" style="enable-background:new 0 0 612 612;" xml:space="preserve">
		<defs>
		<clipPath id="cut-off-arrow">
			<circle cx="306" cy="306" r="287" />
		</clipPath>
		<filter id="goo">
			<feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />
			<feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7" result="goo" />
			<feBlend in="SourceGraphic" in2="goo" />
		</filter>
	  </defs>
		<path class="st-arrow" d="M454.6,350.5L324.7,480.5c-9.8,9.8-25.7,9.8-35.6,0L161,352.3c-14.6-14.6-16.8-38.6-2.9-53.8c14.6-15.9,39.4-16.3,54.5-1.2
			l56,56c0.2,0.2,0.6,0.1,0.6-0.3l0-188.8c0-20.6,15.4-39.2,36-40.1c21.6-1,39.4,16.3,39.4,37.7v191.3c0,0.3,0.4,0.5,0.6,0.3
			l54.3-54.3c14.6-14.6,38.6-16.8,53.8-2.9C469.4,310.7,469.8,335.4,454.6,350.5z" />
	</svg>
	</div>
</a>

<!-- Simple Banner for the Projects Page -->
<section class="simple-banner-container pb-3">
	<div class="container-fluid simple-banner simple-banner--full-width simple-banner--video simple-banner--right"
		 style="position: relative;">
		<div class="banner-button" style="-webkit-transform: translate3d(0,0,0);">
			<a href="@Model.BannerButtonLink.Url" class="hover-for-buzz-out">
				<div class="left-of-plaque d-block d-md-inline">
					<img src="~/assets/images/jpg/home-banner/elements/icon-hand.png" class="hand-icon d-none d-md-inline hvr-buzz-out" alt="Hand Icon" />
					<div class="text d-inline">@Model.BannerButtonText</div>
				</div>
				<div class="centered-plaque d-inline">
					<img src="~/assets/images/jpg/home-banner/elements/icon-plaque.jpg" class="plaque-icon" alt="Plaque Icon" />
				</div>
			</a>
		</div>
		<video id="banner-video" class="video-banner d-block bx-clone" playsinline autoplay muted loop src="@Model.VideoBanner.Url()" aria-hidden="true" style="min-width:0%; min-height:0%;"></video>
		<img class="video-img-repl d-block d-lg-none" src="" style="width: 100%; position: absolute;" />
	</div>
</section>

<div class="home-banner" style="z-index: 900"></div>

<!-- / Simple Banner for the Projects Page -->
<!-- Projects Gallery -->
<section id="gallery" class="projects-gallery-page-container">
	<div class="container-fluid projects-gallery p-0">
		<div class="container text-center">
			<div class="row pt-4 pb-3 mt-md-3 pt-md-5 mt-lg-5 pt-lg-4 pb-lg-4">
				<div class="col-12 col-md-10 offset-md-1 col-lg-12 offset-lg-0">
					<h1 class="pt-3 pb-1 pt-sm-0 pb-sm-5 h2">@Model.H1</h1>
					@if (@Model.H2 != null && !String.IsNullOrEmpty(@Model.H2.ToString()))
					{
						<h2 class="museo-sans-300 h2 mb-5">
							@Model.H2
						</h2>
					}
					@if (@Model.IntroCopy != null && !String.IsNullOrEmpty(@Model.IntroCopy.ToString()))
					{
						<div>@Model.IntroCopy</div>
					}
				</div>
			</div>
			<div class="row p-4 p-md-1 p-lg-4">
				<div class="col-12 text-center">
					<a rel="canonical" href="@Model.IntroButtonLink.Url()" class="btn btn-1 museo-sans-300 py-3 px-4 no-underline">
						@Model.IntroButtonText
					</a>
				</div>
			</div>
			<div class="row p-4 p-md-1 p-lg-4">
				@if (Model.ProjectGallery.Any())
				{

					foreach (var projects in @Model.ProjectGallery)
					{
						var project = new ProjectsGalleryNested(projects);

						<!-- Project -->
						<div class="col-12 col-md-6 p-5 card-col">
							<a rel="canonical" href="@project.ProjectLink.Url()" class="card text-center no-underline">

								<!--Image with logo for small screens -->
								@if (@project.FullProjectImage != null)
								{
									<img class="card-img-top d-lg-none" src="@project.FullProjectImage.Url()" alt="@Path.GetFileNameWithoutExtension(@project.FullProjectImage.Url).Replace("-", " ")">
								}
								<!--Image without logo for large screens -->
								@if (@project.BackgroundProjectImage != null)
								{
									<img class="card-img-top @project.BackgroundParallaxClass paroller d-none d-lg-block" src="@project.BackgroundProjectImage.Url()" alt="@Path.GetFileNameWithoutExtension(@project.BackgroundProjectImage.Url).Replace("-", " ")">
								}

								<!-- Logo for large screens -->
								@if (@project.ProjectImageLogo != null)
								{
									<div class="logo card-logo vpara06 paroller @project.LogoSizeAndCorrection d-none d-lg-block" style="background-image: url(@project.ProjectImageLogo.Url())"></div>
								}

								<!-- Caption text -->
								<div class="card-body vpara04 paroller">
									<h4 class="card-title black-text">@project.ProjectCaptionTitle</h4>

									<p class="card-text black-text">
										@project.ProjectCaptionText
									</p>
								</div>
							</a>
						</div>
						<!-- / Project -->
					}
				}
			</div>
		</div>
	</div>
</section>
<!-- / Projects Gallery -->
<!-- Home Text Section -->
<section class="container-fluid hero-section"
		 style="background-image: linear-gradient(to right, rgba(0,0,0,0.5) 0%,rgba(0,0,0,0.5) 100%), url(assets/images/jpg/banner/banner-background-with-camera.jpg)">
	<div class="transparent-overlay orange1-bg--tp"></div>
	<div class="container">

		<div class="row">
			<div class="col-12 col-lg-7 white-bg main-text-box">
				@if (@Model.TextSectionTitle != null && !String.IsNullOrEmpty(@Model.TextSectionTitle.ToString()))
				{
					<h3 class="pb-0 mb-0">
						@Model.TextSectionTitle
					</h3>

				}
				@if (@Model.TextSection != null && !String.IsNullOrEmpty(@Model.TextSection.ToString()))
				{
					<div>
						@Model.TextSection
					</div>
				}
			</div>
			<div class="d-none d-lg-block col-lg-2 white-bg pt-5">
				<div class="icon d-block"
					 style="background-image: url(@Model.TextSectionIcon.Url())"></div>
			</div>
			<div class="d-none d-lg-block transparent-bg">
			</div>
		</div>
	</div>
</section>
<!-- / Home Text Section -->
<!-- Home Text Section -->
<section class="container text-section text-section--normal mb-5">
	<div class="row">
		<div class="col-5 d-none d-lg-block left-image"
			 style="background-image: url(@Model.SubsectionImage.Url())">
			<div class="boomerang-emblem orange d-none d-xl-block"
				 style="background-image: url(@Model.SubsectionIcon.Url())"></div>
		</div>
		<div class="col-12 col-lg-7 museo-sans-300">
			<h3 class="pb-2">@Model.SubsectionTitle</h3>
			<div>@Model.SubsectionText</div>
			<a rel="canonical" href="@Model.SubsectionButtonLink.Url()"
			   class="black-text black-text-hover museo-sans-700 orange1-border-bottom pb-2 no-underline">
				@Model.SubsectionButtonText
			</a>
		</div>
	</div>

</section>
<!-- / Home Text Section -->
@*<section class="container">
		<div class="row decorative-container">
			<div class="verveine orange1-text big-text pt-3 filter-shadow-big decorative-text">@Model.LargeDecorativeText</div>
		</div>
	</section>*@


@Html.Partial("ActionBox")